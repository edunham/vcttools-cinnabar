---
- hosts: hgssh-prod-master
  gather_facts: no
  tasks:
    - name: obtain previously-deployed changeset
      slurp: src=/etc/mercurial/deployed_vct_changeset
      register: previous_vct_node

    # We need to write this out on clients.
    - name: capture mirror key
      slurp: src=/etc/mercurial/mirror
      register: mirror_private_key

    - name: capture host key
      slurp: src=/etc/mercurial/ssh/ssh_host_rsa_key.pub
      register: mirror_host_key

- hosts: localhost
  gather_facts: no
  tasks:
    - name: verify deploying changeset is available on server
      command: hg -R {{ vct }} log -r {{ lookup('file', '../.vctnode') }} -T '{phase}'
      register: vct_node_phase

    - name: require public vct node
      fail: msg='the v-c-t changeset being deployed is not public; cannot continue'
      when: vct_node_phase.stdout != 'public'

    - name: capture changes since last time
      local_action: command hg --cwd {{ vct }} log -r {{ hostvars['hgssh3.dmz.scl3.mozilla.com'].previous_vct_node.content | b64decode }}::{{ lookup('file', '../.vctnode') }} -T '{node|short} {desc|firstline}\n'
      register: vct_changes

    - name: check if mozbuild chroot is available
      stat: path={{ vct }}/chroot_mozbuild/chroot.tar.gz
      register: chroot_mozbuild

    - name: notify IRC of deployment
      irc: server=irc.mozilla.org
           port=6697
           use_ssl=true
           channel="#vcs"
           nick=hg-deploy-bot
           color=red
           msg="Started deploy of revision {{ lookup('file', '../.vctnode') }} to hg.mozilla.org; previous {{ hostvars['hgssh3.dmz.scl3.mozilla.com'].previous_vct_node.content | b64decode }}"
      run_once: true

- hosts: hgweb-prod
  roles:
    - { role: hg-web,
        # We have to use hostvars to reference variables on other hosts.
        # slurp captures content in base64 encoded form. Decode it
        # before it is passed in.
        mirror_private_key: "{{ hostvars['hgssh3.dmz.scl3.mozilla.com'].mirror_private_key.content | b64decode }}",
        mirror_host_key: "{{ hostvars['hgssh3.dmz.scl3.mozilla.com'].mirror_host_key.content | b64decode }}",
        # hg-zlb.vips.scl3.mozilla.com resolves to multiple IPs.
        mirror_ips: ["63.245.215.25", "63.245.215.102"],
        vct_node: "{{ lookup('file', '../.vctnode') }}",
        chroot_mozbuild_exists: "{{ hostvars['localhost'].chroot_mozbuild.stat.exists }}",
      }

- hosts: hgssh-prod
  pre_tasks:
    # Until we integrate secrets with Ansible, the LDAP config is
    # pre-defined on the server.
    - name: capture LDAP config
      slurp: src=/etc/mercurial/ldap.json
      register: ldap_config

    # Ditto for the Pulse config.
    - name: capture Pulse config
      slurp: src=/etc/mercurial/pulse.json
      register: pulse_config

  roles:
    - {
        role: hg-ssh,
        bind_dn: "{{ (ldap_config.content | b64decode | from_json).username }}",
        bind_pw: "{{ (ldap_config.content | b64decode | from_json).password }}",
        ldap_uri: "{{ (ldap_config.content | b64decode | from_json).url }}",
        hgweb_hosts: "{{ groups['hgweb-prod'] }}",
        pulse_user: "{{ (pulse_config.content | b64decode | from_json).user }}",
        pulse_password: "{{ (pulse_config.content | b64decode | from_json).password }}",
      }

  tasks:
    - name: discover kafka topics
      command: /opt/kafka/bin/kafka-topics.sh --zookeeper {{ kafka_zookeeper_connect }} --list
      register: kafka_topics
      when: ansible_hostname == 'hgssh4'

    - name: create kafka topics
      command: /opt/kafka/bin/kafka-topics.sh --zookeeper {{ kafka_zookeeper_connect }} --create --topic {{ item.topic }} --partitions {{ item.partitions }} --replication-factor {{ kafka_replication_factor }} --config min.insync.replicas={{ kafka_min_insync_replicas }} --config unclean.leader.election.enable=false --config max.message.bytes=104857600
      when: "ansible_hostname == 'hgssh4' and '{{ item.topic }}' not in kafka_topics.stdout_lines"
      with_items:
        - { topic: pushdata, partitions: 8 }
        - { topic: pushlog, partitions: 1 }
        # copy of messages from "pushdata" once they are acknowledged by mirrors
        - { topic: replicatedpushdata, partitions: 1 }

    - name: record deployment of this changeset
      copy: dest=/etc/mercurial/deployed_vct_changeset
            content={{ lookup('file', '../.vctnode') }}
            owner=root
            group=root
            mode=0644
      when: ansible_hostname == 'hgssh3'

- hosts: localhost
  gather_facts: no
  tasks:
    - name: notify IRC of deployment
      irc: server=irc.mozilla.org
           port=6697
           use_ssl=true
           channel="#vcs"
           nick=hg-deploy-bot
           color=red
           msg="Finished deploy of hooks and extensions to hg.mozilla.org"
      run_once: true
