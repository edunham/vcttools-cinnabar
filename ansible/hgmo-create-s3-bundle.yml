---
- hosts: hgssh1.dmz.scl3.mozilla.com
  tasks:
    # Bundle files are named after the heads in the repository, as this
    # is the most minimal approximation of the state of a repository. We
    # start by collecting heads.
    - name: discover heads
      command: hg -R /repo/hg/mozilla/{{ repo }} heads -t -T '{node|short}\n'
      register: heads

    # Bundle generation is pretty straightforward. We write out a
    # .hg/bundle.<heads>.hg bundle file containing all revisions in the
    # repository.
    #
    # There is a slight race condition here. But it should be harmless,
    # as the bundle is never guaranteed to be complete.
    - name: produce bundle file
      command: hg -R /repo/hg/mozilla/{{ repo }} bundle -a -t gzip /repo/hg/mozilla/{{ repo }}/.hg/bundle.{{ heads.stdout_lines | join("_") }}.hg creates=/repo/hg/mozilla/{{ repo }}/.hg/bundle.{{ heads.stdout_lines | join("_") }}.hg

    - name: upload bundle to S3
      s3: mode=put
          src=/repo/hg/mozilla/{{ repo }}/.hg/bundle.{{ heads.stdout_lines | join("_") }}.hg
          bucket=moz-hg-bundle
          object={{ repo }}/{{ heads.stdout_lines | join("_") }}.hg
          region=us-west-2

    - name: write bundle manifest file
      copy: dest=/repo/hg/mozilla/{{ repo }}/.hg/bundleclone.manifest
            owner=hg
            group=hg
            content=https://s3-us-west-2.amazonaws.com/moz-hg-bundle/{{ repo }}/{{ heads.stdout_lines | join("_") }}.hg

    # We don't need the bundle file after uploading it to S3.
    - name: delete local bundle file
      file: path=/repo/hg/mozilla/{{ repo }}/.hg/bundle.{{ heads.stdout_lines | join("_") }}.hg state=absent

- hosts: hgweb-prod
  tasks:
    # Force an `hg pull` so the updated manifest syncs to the web heads.
    - name: sync bundle manifest file
      shell: /usr/bin/sudo -u hg /usr/local/bin/mirror-pull {{ repo }}

