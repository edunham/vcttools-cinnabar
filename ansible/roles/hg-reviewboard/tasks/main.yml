---
- name: determine if running in Docker
  stat: path=/vct
  register: vct_dir
  tags:
    - docker-refresh

# yum will incur network traffic when URLs are specified. Download the
# package locally first so we can run offline after initial bootstrap.
- name: download RPMs
  get_url: url=https://s3-us-west-2.amazonaws.com/moz-packages/CentOS6/{{ item.path }}
           dest=/var/tmp/{{ item.path }}
           sha256sum={{ item.sha256 }}
  with_items:
    - { path: mercurial-3.4.1-0.x86_64.rpm, sha256: 4e6190232ae217aacc894c0baf8e61900cb55d4ee0406a09a22b70cb9c6dfbd0 }
    - { path: python27-virtualenv-12.0.7-1.ius.el6.noarch.rpm, sha256: a3f6c80d7a83798e4d64827d81dbcc39c1c44ae66c0afa4866bc477baad2cc2c }

- name: system packages installed
  yum: name={{ item }} state=present
  with_items:
    - httpd
    # To build mod_wsgi from source.
    - httpd-devel
    # Needed to build python-ldap package for virtualenv.
    - openldap-devel
    - python27
    # Used by pash, since it doesn't yet run from Python 2.7 / virtualenv.
    - python-ldap
    - rsyslog
    - sudo

- name: local RPMs installed
  command: /usr/bin/yum -y localinstall /var/tmp/mercurial-3.4.1-0.x86_64.rpm /var/tmp/python27-virtualenv-12.0.7-1.ius.el6.noarch.rpm

- name: Source code groups
  group: name={{ item.name }} gid={{ item.gid }}
  with_items:
    - { name: 'scm_level_1', gid: 673 }
    - { name: 'scm_level_2', gid: 685 }
    - { name: 'scm_level_3', gid: 679 }
    - { name: 'scm_l10n', gid: 678 }
    - { name: 'scm_l10n_infra', gid: 680 }
    - { name: 'scm_sec_sensitive', gid: 686 }
    - { name: 'scm_ecmascript', gid: 687 }

- name: Create hg user
  user: name=hg uid=500 shell=/bin/bash comment='Hg user' groups=scm_level_1,scm_level_2,scm_level_3,scm_l10n,scm_l10n_infra,scm_sec_sensitive

- name: Repository directories present
  file: path={{ item }} state=directory mode=0755
  with_items:
    - /repo
    - /repo/hg
    - /repo/hg/library
    - /repo/hg/mozilla
    - /repo/hg/webroot_wsgi

- name: create virtualenvs
  command: /usr/bin/virtualenv-2.7 /repo/hg/{{ item }} creates=/repo/hg/{{ item }}
  with_items:
    - venv_hgweb
    - venv_pash

- name: copy peep.py into virtualenvs
  copy: src=files/peep.py
        dest=/repo/hg/{{ item }}/bin/peep
        mode=0755
        owner=root
        group=root
  with_items:
    - venv_hgweb
    - venv_pash

- name: configure shebang in peep
  replace: dest=/repo/hg/{{ item }}/bin/peep
           regexp='^#!\/usr\/bin\/env python$'
           replace='#!/repo/hg/{{ item }}/bin/python2.7'
  with_items:
    - venv_hgweb
    - venv_pash

- name: copy pash requirements file
  copy: src=requirements-pash.txt
        dest=/repo/hg/venv_pash/requirements.txt
        owner=root
        group=root
        mode=0644

- name: copy hgweb requirements file
  copy: src=requirements-hgweb.txt
        dest=/repo/hg/venv_hgweb/requirements.txt
        owner=root
        group=root
        mode=0644

- name: populate virtualenvs
  pip: requirements=/repo/hg/{{ item }}/requirements.txt
       executable=/repo/hg/{{ item }}/bin/peep
  with_items:
    - venv_hgweb
    - venv_pash

- name: install pash configuration file
  template: src=pash.json.j2
            dest=/etc/mercurial/pash.json
            owner=root
            group=root
            mode=0644

- name: set up version-control-tools repo (server only)
  hg: repo=https://hg.mozilla.org/hgcustom/version-control-tools
      dest=/repo/hg/version-control-tools
      revision={{ lookup('file', '../../../../.vctnode') }}
      force=yes
      purge=yes
  when: vct_dir.stat.exists == False

# The hg module's purge doesn't delete ignored files. Boo. Force that
# because old .pyc files may cause chaos.
- name: delete ignored files from version-control-tools repo
  command: hg --config extensions.purge= -R /repo/hg/version-control-tools purge --all
  when: vct_dir.stat.exists == False

- name: synchronize version-control-tools (Docker only)
  synchronize: src={{ vct | mandatory }}/
               dest=/repo/hg/version-control-tools/
               recursive=yes
               delete=yes
  when: vct_dir.stat.exists == True
  tags:
    - docker-refresh

#- name: hg scripts are in place
#  hg: dest=/repo/hg/scripts repo=https://hg.mozilla.org/hgcustom/hgscripts

- name: Global hgrc installed
  template: src=hgrc.j2 dest=/etc/mercurial/hgrc mode=0444

- name: install pash
  copy: src={{ vct }}/hgserver/pash/{{ item }}
        dest=/usr/local/bin/{{ item }}
        owner=root
        group=root
        mode=0755
  with_items:
    - hg_helper.py
    - ldap_helper.py
    - pash.py
    - pash_wrapper
    - repo_group.py
    - sh_helper.py

- name: hgweb wsgi and config in place
  copy: src={{ item }} dest=/repo/hg/webroot_wsgi/{{ item }}
  with_items:
    - hgweb.config
    - hgweb.wsgi

- name: install httpd.conf file
  template: src=httpd.conf.j2
            dest=/etc/httpd/conf/httpd.conf
            owner=root
            group=root
            mode=0644

- name: Apache vhost config in place
  template: src=vhost.conf.j2
            dest=/etc/httpd/conf.d/hg.conf
            owner=root
            group=root
            mode=0644

- name: install wsgi config
  copy: content="LoadModule wsgi_module /repo/hg/venv_hgweb/lib/python2.7/site-packages/mod_wsgi/server/mod_wsgi-py27.so"
        dest=/etc/httpd/conf.d/wsgi.conf
        owner=root
        group=root
        mode=0644

- name: Apache log directory present
  file: path=/var/log/httpd/{{ domain | mandatory }} state=directory mode=0755

- name: Prune system httpd configs
  file: path=/etc/httpd/conf.d/welcome.conf state=absent

- name: ensure httpd service is started
  service: name=httpd state=started
  # Don't do this on Docker because it has its own mechanism for
  # starting.
  when: vct_dir.stat.exists == False

- include: discovery-repo.yml repo=autoreview
