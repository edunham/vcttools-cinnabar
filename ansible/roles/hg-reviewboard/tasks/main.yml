---
- name: determine if running in Docker
  stat: path=/vct
  register: vct_dir
  tags:
    - docker-refresh

- name: system packages installed
  yum: name={{ item }} state=present
  with_items:
    - httpd
    # To build mod_wsgi from source.
    - httpd-devel
    # Used for validating Bugzilla API keys through HTTP pushes.
    - mod_authnz_external
    # Needed to build python-ldap package for virtualenv.
    - openldap-devel
    - python27
    - python27-devel
    # Used by pash, since it doesn't yet run from Python 2.7 / virtualenv.
    - python-ldap
    - rsyslog
    - sudo

- name: Source code groups
  group: name={{ item.name }} gid={{ item.gid }}
  with_items:
    - { name: 'scm_level_1', gid: 673 }
    - { name: 'scm_level_2', gid: 685 }
    - { name: 'scm_level_3', gid: 679 }
    - { name: 'scm_l10n', gid: 678 }
    - { name: 'scm_l10n_infra', gid: 680 }
    - { name: 'scm_sec_sensitive', gid: 686 }
    - { name: 'scm_ecmascript', gid: 687 }

- name: Create hg user
  user: name=hg uid=500 shell=/bin/bash comment='Hg user' groups=scm_level_1,scm_level_2,scm_level_3,scm_l10n,scm_l10n_infra,scm_sec_sensitive

- name: Repository directories present
  file: path={{ item }} state=directory mode=0755
  with_items:
    - /repo
    - /repo/hg
    - /repo/hg/library
    - /repo/hg/mozilla
    - /repo/hg/webroot_wsgi
    - /var/hg

- name: create virtualenv for hgweb
  include: ../../../tasks/virtualenv.yml
           venv=/var/hg/venv_hgweb
           requirements=../roles/hg-reviewboard/files/requirements-hgweb.txt

- name: create virtualenv for pash
  include: ../../../tasks/virtualenv.yml
           venv=/var/hg/venv_pash
           requirements=../roles/hg-reviewboard/files/requirements-pash.txt

- name: install pash configuration file
  template: src=pash.json.j2
            dest=/etc/mercurial/pash.json
            owner=root
            group=root
            mode=0644

- name: set up version-control-tools repo (server only)
  hg: repo=https://hg.mozilla.org/hgcustom/version-control-tools
      dest=/var/hg/version-control-tools
      revision={{ lookup('file', '../../../../.vctnode') }}
      force=yes
      purge=yes
  when: vct_dir.stat.exists == False

# The hg module's purge doesn't delete ignored files. Boo. Force that
# because old .pyc files may cause chaos.
- name: delete ignored files from version-control-tools repo
  command: hg --config extensions.purge= -R /var/hg/version-control-tools purge --all
  when: vct_dir.stat.exists == False

- name: synchronize version-control-tools (Docker only)
  synchronize: src={{ vct | mandatory }}/
               dest=/var/hg/version-control-tools/
               recursive=yes
               delete=yes
  when: vct_dir.stat.exists == True
  tags:
    - docker-refresh

- name: Global hgrc installed
  template: src=hgrc.j2 dest=/etc/mercurial/hgrc mode=0444

- name: install pash
  copy: src={{ vct }}/hgserver/pash/{{ item }}
        dest=/usr/local/bin/{{ item }}
        owner=root
        group=root
        mode=0755
  with_items:
    # Install pash.py first to ensure SSH root login works.
    - pash.py
    - hg_helper.py
    - ldap_helper.py
    - pash_wrapper
    - repo_group.py
    - sh_helper.py

- name: hgweb wsgi and config in place
  copy: src={{ item }} dest=/repo/hg/webroot_wsgi/{{ item }}
  with_items:
    - hgweb.config
    - hgweb.wsgi
    - robots.txt

- name: install httpd.conf file
  template: src=httpd.conf.j2
            dest=/etc/httpd/conf/httpd.conf
            owner=root
            group=root
            mode=0644

- name: Apache vhost config in place
  template: src=vhost.conf.j2
            dest=/etc/httpd/conf.d/hg.conf
            owner=root
            group=root
            mode=0644

- name: install wsgi config
  copy: content="LoadModule wsgi_module /var/hg/venv_hgweb/lib/python2.7/site-packages/mod_wsgi/server/mod_wsgi-py27.so"
        dest=/etc/httpd/conf.d/wsgi.conf
        owner=root
        group=root
        mode=0644

- name: Apache log directory present
  file: path=/var/log/httpd/{{ domain | mandatory }} state=directory mode=0755

- name: Prune system httpd configs
  file: path={{ item }}
        state=absent
  with_items:
    - /etc/httpd/conf.d/authnz_external.conf
    - /etc/httpd/conf.d/welcome.conf

- name: ensure httpd service is started
  service: name=httpd state=started
  # Don't do this on Docker because it has its own mechanism for
  # starting.
  when: vct_dir.stat.exists == False

- include: discovery-repo.yml repo=autoreview
