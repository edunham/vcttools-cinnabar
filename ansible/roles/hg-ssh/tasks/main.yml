---
- name: determine if running in Docker
  stat: path=/vct
  register: vct_dir

- name: Install packages required to run a Mercurial server
  yum: name={{ item }} state=present
  with_items:
    # Needed to build python-ldap package for virtualenv.
    - openldap-devel
    - python27
    - python-ldap
    - sudo
    - rsyslog
    - tar

# yum will incur network traffic when URLs are specified. Download the
# package locally first so we can run offline after initial bootstrap.
- name: download Mozilla rpms
  get_url: url=https://s3-us-west-2.amazonaws.com/moz-packages/CentOS6/{{ item.path }}
           dest=/var/tmp/{{ item.path }}
           sha256sum={{ item.sha256 }}
  with_items:
    - { path: mercurial-3.4.1-0.x86_64.rpm, sha256: 4e6190232ae217aacc894c0baf8e61900cb55d4ee0406a09a22b70cb9c6dfbd0 }
    # The version of virtualenv in the IUS repo isn't compatible with
    # peep because it has a pip that is too new. See
    # https://github.com/erikrose/peep/pull/94. Install an old version
    # until peep is compatible.
    - { path: python27-virtualenv-12.0.7-1.ius.el6.noarch.rpm, sha256: a3f6c80d7a83798e4d64827d81dbcc39c1c44ae66c0afa4866bc477baad2cc2c }

- name: install Mozilla rpms
  command: yum localinstall -y /var/tmp/mercurial-3.4.1-0.x86_64.rpm /var/tmp/python27-virtualenv-12.0.7-1.ius.el6.noarch.rpm

- name: Create groups for SCM ACLs
  group: name={{ item.name }} gid={{ item.gid }}
  with_items:
    - { name: 'scm_level_1', gid: 673 }
    - { name: 'scm_level_2', gid: 685 }
    - { name: 'scm_level_3', gid: 679 }
    - { name: 'scm_l10n', gid: 678 }
    - { name: 'scm_l10n_infra', gid: 680 }
    - { name: 'scm_sec_sensitive', gid: 686 }
    - { name: 'scm_ecmascript', gid: 687 }

- name: Create hg group
  group: name=hg

- name: Create hg user
  user: name=hg group=hg

- name: hg user ssh config is prepared
  file: path=/home/hg/.ssh state=directory mode=0775 owner=hg group=hg

- name: Mercurial config directory is present
  file: path=/etc/mercurial state=directory mode=0775

- name: directories for support tools is present
  file: path=/usr/local/bin
        state=directory
        owner=root
        group=root
        mode=0755

- name: replication SSH key is present
  command: /usr/bin/ssh-keygen -b 2048 -f /etc/mercurial/mirror -t rsa creates=/etc/mercurial/mirror

- name: capture content of replication SSH key
  slurp: src=/etc/mercurial/mirror.pub
  register: mirror_ssh_key_public

- name: ensure proper permissions on replication key
  file: path={{ item }} owner=hg group=hg
  with_items:
    - /etc/mercurial/mirror
    - /etc/mercurial/mirror.pub

- name: hg user has replication key configured in authorized_keys
  copy: dest=/home/hg/.ssh/authorized_keys
        content={{ mirror_ssh_key_public.content | b64decode }}
        owner=hg
        group=hg
        mode=0640

- name: known hosts file for mirrors is populated
  template: src=known_hosts.j2
            dest=/etc/mercurial/known_hosts
            owner=hg
            group=hg
            mode=0660

- name: Mercurial repository directories are present
  file: path={{ item }} state=directory mode=0775
  with_items:
    - /repo/hg/mozilla
    - /repo/hg/extensions
    - /repo/hg/scripts

- name: User repository directories are present
  file: path=/repo/hg/mozilla/users state=directory mode=0775 owner=hg group=scm_level_1

- name: create virtualenv for Python processes
  command: /usr/bin/virtualenv-2.7 /repo/hg/{{ item }} creates=/repo/hg/{{ item }}
  with_items:
    - venv_pash
    - venv_tools

- name: copy peep.py to virtualenv
  copy: src=files/peep.py
        dest=/repo/hg/{{ item }}/bin/peep
        mode=0755
        owner=root
        group=root
  with_items:
    - venv_pash
    - venv_tools

- name: configure shebang in peep
  replace: dest=/repo/hg/{{ item }}/bin/peep
           regexp='^#!\/usr\/bin\/env python$'
           replace='#!/repo/hg/{{ item }}/bin/python2.7'
  with_items:
    - venv_pash
    - venv_tools

- name: copy requirements.txt
  copy: src=requirements-{{ item }}.txt
        dest=/repo/hg/venv_{{ item }}/requirements.txt
        owner=root
        group=root
        mode=0644
  with_items:
    - pash
    - tools

- name: populate virtualenv
  pip: requirements=/repo/hg/{{ item }}/requirements.txt
       executable=/repo/hg/{{ item }}/bin/peep
  with_items:
    - venv_pash
    - venv_tools

# Hooks are referenced in various hgrc files via "python:mozhghooks.*".
# This means they are imported as Python modules from the "mozhghooks"
# package. We create a .pth file telling the virtualenv that
# all hooks are located in the version-control-tools checkout.
- name: add mozhghooks to virtualenv
  copy: dest=/repo/hg/{{ item }}/lib/python2.7/site-packages/mozhghooks.pth
        content=/repo/hg/version-control-tools/hghooks
        owner=root
        group=root
        mode=0644
  with_items:
    - venv_pash
    - venv_tools

- name: set up version-control-tools repo (server only)
  hg: repo=https://hg.mozilla.org/hgcustom/version-control-tools
      dest=/repo/hg/version-control-tools
      revision={{ lookup('file', '../../../../.vctnode') }}
      force=yes
      purge=yes
      executable=/repo/hg/venv_tools/bin/hg
  when: vct_dir.stat.exists == False

# The hg module's purge doesn't delete ignored files. Boo. Force that
# because old .pyc files may cause chaos.
- name: delete ignored files from version-control-tools repo
  command: /repo/hg/venv_tools/bin/hg --config extensions.purge= -R /repo/hg/version-control-tools purge --all
  when: vct_dir.stat.exists == False

- name: rsync version-control-tools repo (Docker only)
  command: /usr/bin/rsync -a --delete-after /vct/ /repo/hg/version-control-tools/
  when: vct_dir.stat.exists == True

- name: ensure version-control-tools permissions are sane (Docker only)
  command: /bin/chmod -R a+r /repo/hg/version-control-tools
  when: vct_dir.stat.exists == True

- name: install rsyslog policy for hg
  copy: src=rsyslog-hg.conf
        dest=/etc/rsyslog.d/hg.conf
        owner=root
        group=root
        mode=0644
  notify: restart rsyslogd

- name: install logrotate config for hg
  copy: src=logrotate-hg.conf
        dest=/etc/logrotate.d/hg
        owner=root
        group=root
        mode=0644

- name: Mercurial log files are present and writable
  file: path={{ item }} mode=0666 state=touch
  with_items:
    - /var/log/hg-push.log
    - /var/log/pash.log

- name: sudoers policy for repo-push is in place
  copy: src=repo-push.sudoers dest=/etc/sudoers.d/repo-push

- name: Global Mercurial config is in place
  copy: src=hgrc dest=/etc/mercurial/hgrc mode=0664 owner=root group=root

# pash is a collection of Python files handling SSH connections. They behave
# like a Python module but are installed not as such for historical reasons.
- name: install pash
  copy: src={{ vct }}/hgserver/pash/{{ item }}
        dest=/usr/local/bin/{{ item }}
        owner=root
        group=root
        mode=0755
  with_items:
    - hg_helper.py
    - ldap_helper.py
    - pash.py
    - pash_wrapper
    - repo_group.py
    - sh_helper.py

- name: install repo-push script
  copy: src={{ vct }}/scripts/repo-push.sh
        dest=/usr/local/bin/repo-push.sh
        owner=root
        group=root
        mode=0755

- name: install push scripts
  copy: src={{ vct }}/scripts/{{ item }}
        dest=/repo/hg/scripts/{{ item }}
        owner=root
        group=root
        mode=0755
  with_items:
    - push-repo.sh
    - record-pushes.sh

- name: ensure bundles directory exists
  file: path=/repo/bundles
        state=directory
        owner=hg
        group=hg
        mode=0775

- name: write list of repositories to generate bundles for
  copy: src=bundle-repos
        dest=/repo/bundles/repos
        owner=hg
        group=hg
        mode=0644

# Pull in tasks shared between hg-ssh and hg-web.
# This should run last to ensure all preconditions are met.
- include: ../../../tasks/hgmo-extensions.yml
